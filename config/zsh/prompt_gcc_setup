function +vi-git_status {
  # Check for untracked files or updated submodules since vcs_info does not.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    hook_com[unstaged]='%F{red}𑇐% '
  fi
}

function prompt_gcc_precmd {
  vcs_info
}

function prompt_gcc_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_gcc_precmd

  # Tell prezto we can manage this prompt
  zstyle ':prezto:module:prompt' managed 'yes'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%F{magenta}ﬦ'
  zstyle ':prezto:module:editor:info:keymap:primary:insert' format 'I'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format 'O'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%F{red}ﬦ'
  zstyle ':prezto:module:editor:info:completing' format '...'

  # Set vcs_info parameters.
  zstyle ':vcs_info:*' enable bzr git hg svn
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:git:*' stagedstr '%F{green}𑇐%f '
  zstyle ':vcs_info:git:*' unstagedstr '%F{yellow}𑇐%f '
  zstyle ':vcs_info:git:*' formats ' %c%u%b'
  zstyle ':vcs_info:git:*' actionformats " - %c%u%b|%F{cyan}%a%f"
  zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b|%F{cyan}%r%f'
  zstyle ':vcs_info:git*+set-message:*' git_status hooks 

  NEWLINE=$'\n'
  TOP_LEFT_CURVE="╭"
  BOTTOM_LEFT_CURVE="╰"
  TOP_LEFT="┌"
  BOTTOM_LEFT="└"
  LINE="─"
  PROMPT='%F{cyan}${TOP_LEFT}${LINE}%f%n%F{black}.%f%M %F{magenta}in%f %2~${NEWLINE}%F{cyan}${BOTTOM_LEFT}%f$editor_info[keymap] '
  RPROMPT='${vcs_info_msg_0_}'
}

function prompt_gcc_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2> /dev/null
  prompt_preview_theme 'gcc'
}

prompt_gcc_setup "$@"
# vim: ft=zsh
